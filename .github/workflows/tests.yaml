name: Tests
on:
  push:
    branches:
      - master
      - main
      - "release/*"
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true
jobs:
  unit:
    name: unit
    runs-on: ubuntu-latest
    permissions:
      id-token: write # allows the JWT to be requested from GitHub's OIDC provider
      contents: read # This is required for actions/checkout
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@2ff7a6968c81b173eaaef188869215870f44902b  # master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5  # v4.2.0
        with:
          role-to-assume: ${{ secrets.CI_MACHINE_AWS_ROLE }}
          aws-region: us-east-1

      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go version
      - run: go mod download # Not required, used to segregate module download vs test times
      - name: Configure AWS credentials
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_EXTERNAL_ID: ${{ secrets.AWS_EXTERNAL_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE_ARN }}
        run: make test exclude="(kafkaclient|testhelper)"
      - uses: codecov/codecov-action@v5
  test-package:
    name: Test package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - kafkaclient
          - testhelper
    steps:
      - name: Disable IPv6
        run: |
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
          sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go version
      - run: go mod download
      - name: Test package [ ${{ matrix.package }} ]
        env:
          TEST_KAFKA_CONFLUENT_CLOUD_HOST: ${{ secrets.TEST_KAFKA_CONFLUENT_CLOUD_HOST }}
          TEST_KAFKA_CONFLUENT_CLOUD_KEY: ${{ secrets.TEST_KAFKA_CONFLUENT_CLOUD_KEY }}
          TEST_KAFKA_CONFLUENT_CLOUD_SECRET: ${{ secrets.TEST_KAFKA_CONFLUENT_CLOUD_SECRET }}
          TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_HOST: ${{ secrets.TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_HOST }}
          TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_EVENTHUB_NAME: ${{ secrets.TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_EVENTHUB_NAME }}
          TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_CONNECTION_STRING: ${{ secrets.TEST_KAFKA_AZURE_EVENT_HUBS_CLOUD_CONNECTION_STRING }}
        run: make test exclude="${{ matrix.exclude }}" package=${{ matrix.package }}
      - name: Sanitize name for Artifact
        run: |
          name=$(echo -n "${{ matrix.package }}" | sed -e 's/[ \t:\/\\"<>|*?]/-/g' -e 's/--*/-/g')
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV
      - uses: codecov/codecov-action@v5
